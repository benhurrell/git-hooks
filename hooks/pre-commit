#!/usr/bin/php
<?php

$nebsites_path = 'nebsites.json';

$nebsites = new class(
	(
		is_file($nebsites_path)
		&& is_readable($nebsites_path)
		? json_decode(file_get_contents($nebsites_path), true)
		: []
	)
	?? []
) {
	public $phplint;
	public $phpstan;
	public $phpunit;
	
	
	public function __construct(
		array $configuration
	) {
		
		$this->phplint =
			$configuration['phplint']
			?? 'php -l';
		$this->phpstan =
			$configuration['phpstan']
			?? (
				is_executable('./vendor/bin/phpstan')
				? './vendor/bin/phpstan'
				: null
			)
			?? 'phpstan';
		$this->phpunit =
			$configuration['phpunit']
			?? (
				is_executable('./vendor/bin/phpunit')
				? './vendor/bin/phpunit'
				: false
			);
	}
};

$output = [];
$return = 0;
exec('git rev-parse --verify HEAD 2> /dev/null', $output, $return);
unset($output);

$files = [];
exec(
	'git diff-index --cached --name-status '
	. (
		$return === 0
		? 'HEAD'
		: '4b825dc642cb6eb9a060e54bf8d69288fbee4904'
	)
	. ' | egrep \'^(A|M)\' | awk \'{print $2;}\'',
	$files
);

$output = [];
$returns = [];

foreach ($files as $file) {

	$return = 0;

	if (strtolower(pathinfo($file, PATHINFO_EXTENSION)) !== 'php') {
		
		continue;
	}
	
	if ($nebsites->phplint !== false) {
		
		$output[] = PHP_EOL;
		$output[] = '# Executing PHP Lint';
		
		exec(
			'cat '
			. $file
			. ' | '
			. $nebsites->phplint,
			$output,
			$return
		);
		
		$returns[] = $return;
		
		if ($return !== 0) {
			
			continue;
		}
	}

	if ($nebsites->phpstan !== false) {
		
		$output[] = PHP_EOL;
		$output[] = '# Executing PHPStan';
		
		exec(
			$nebsites->phpstan
			. ' analyse '
			. escapeshellarg($file),
			$output,
			$return
		);
		
		$returns[] = $return;
	}
	
	if ($nebsites->phpunit !== false) {
		
		$test_path =
		'tests'
		. DIRECTORY_SEPARATOR
		. pathinfo($file, PATHINFO_DIRNAME)
		. DIRECTORY_SEPARATOR
		. pathinfo($file, PATHINFO_FILENAME);

		if (file_exists($phpUnitClassPath)) {
			
			$output[] = PHP_EOL;
			$output[] = '# Executing PHPUnit';
			
			exec(
				$nebsites->phpunit
				. ' '
				. $phpUnitClassPath
				. DIRECTORY_SEPARATOR
				. '*',
				$output,
				$return
			);
	
			$returns[] = $return;
		}
	}
}

echo implode(PHP_EOL, $output);

exit((int) !empty(array_filter($returns)));
